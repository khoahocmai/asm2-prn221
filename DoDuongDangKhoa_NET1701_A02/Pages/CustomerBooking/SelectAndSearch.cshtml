@page
@model DoDuongDangKhoa_NET1701_A02.Pages.CustomerBooking.SelectAndSearchModel
@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@{
    ViewData["Title"] = "Select Dates and Search Rooms";
}

<h3>@ViewData["Title"]</h3>
<hr />
<form method="post" class="needs-validation" novalidate>
    <div class="row mb-3">
        <div class="col-md-6">
            <label asp-for="StartDate" class="form-label">Start Date</label>
            <input asp-for="StartDate" class="form-control" />
            <div class="text-danger">
                @Html.ValidationMessageFor(model => model.StartDate)
            </div>
        </div>
        <div class="col-md-6">
            <label asp-for="EndDate" class="form-label">End Date</label>
            <input asp-for="EndDate" class="form-control" />
            <div class="text-danger">
                @Html.ValidationMessageFor(model => model.EndDate)
            </div>
        </div>
    </div>
    <div class="d-flex justify-content-end">
        <input type="submit" value="Search Rooms" class="btn btn-primary me-2" />
    </div>
</form>

@if (Model.ShowResults)
{
    <div>
        <h4>Available Rooms from @Model.StartDate.ToString("yyyy-MM-dd") to @Model.EndDate.ToString("yyyy-MM-dd")</h4>
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Room Number</th>
                    <th>Room Type</th>
                    <th>Price Per Night</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.AvailableRooms.Any())
                {
                    @foreach (var room in Model.AvailableRooms)
                    {
                        <tr>
                            <td>@room.RoomNumber</td>
                            <td>@room.RoomTypeName</td>
                            <td>@room.RoomPricePerDay</td>
                            <td>
                                <form method="post" asp-page="ConfirmBooking">
                                    <input type="hidden" name="RoomId" value="@room.RoomId" />
                                    <input type="hidden" name="StartDate" value="@Model.StartDate.ToString("yyyy-MM-dd")" />
                                    <input type="hidden" name="EndDate" value="@Model.EndDate.ToString("yyyy-MM-dd")" />
                                    <input type="hidden" name="RoomNumber" value="@room.RoomNumber" />
                                    <input type="hidden" name="RoomTypeName" value="@room.RoomTypeName" />
                                    <input type="hidden" name="RoomPricePerDay" value="@room.RoomPricePerDay" />
                                    <button type="submit" class="btn btn-primary btn-sm">Book Now</button>
                                </form>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" class="text-center">No rooms available for the selected dates</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.18/signalr.min.js"></script>
    <script type="text/javascript">
        // Kết nối với SignalR Hub
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/RoomHub")
            .build();

        connection.on("ReceiveMessage", (user, message) => {
            const msg = user + ": " + message;
            const li = document.createElement("li");
            li.textContent = msg;
            document.getElementById("messagesList").appendChild(li);
        });

        connection.start().catch(err => console.error(err.toString()));

        connection.start().catch(err => console.error(err.toString()));

        document.getElementById("sendButton").addEventListener("click", event => {
            const user = document.getElementById("userInput").value;
            const message = document.getElementById("messageInput").value;
            connection.invoke("SendMessage", user, message).catch(err => console.error(err.toString()));
            event.preventDefault();
        });
    </script>
}
